rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticatedUser() {
      return request.auth != null && request.auth.token.email != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             request.auth.token.admin == true;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Survey responses collection
    match /surveys/{surveyId} {
      // Users can create their own survey responses (organization validation done in app)
      allow create: if isAuthenticatedUser() && 
                       request.auth.uid == request.resource.data.userId;
      
      // Only admins can read survey responses
      allow read: if isAdmin();
      
      // No updates or deletes allowed (surveys are immutable once submitted)
      allow update, delete: if false;
    }
    
    // User survey status collection (tracks completion)
    match /userSurveyStatus/{userId} {
      // Users can read and write their own status
      allow read, write: if isAuthenticatedUser() && isOwner(userId);
      
      // Admins can read all status documents
      allow read: if isAdmin();
      
      // No deletes allowed
      allow delete: if false;
    }
    
    // Organizations collection - read for all (needed for login validation), write for admins only
    match /organizations/{organizationId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Admin-only collections for analytics (if needed in future)
    match /analytics/{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Block all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}